{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","get","then","negociacoes","map","objeto","create","Date","data","quantidade","valor","catch","console","log","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagarTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\nimport {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoService {\n    constructor() {\n        this._http = new HttpService();\n    }\n\n    obterNegociacoesDaSemana() {\n        return this._http\n            .get('negociacoes/semana')\n            .then((negociacoes) => {\n                return negociacoes.map((objeto) => Negociacao.create(new Date(objeto.data), objeto.quantidade, objeto.valor));\n            }).catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da semana.')\n            });\n    }\n\n    obterNegociacoesDaSemanaRetrasada() {\n        return this._http\n            .get('negociacoes/retrasada')\n            .then((negociacoes) => {\n                return negociacoes.map((objeto) => Negociacao.create(new Date(objeto.data), objeto.quantidade, objeto.valor));\n            }).catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da semana retrasada.')\n            });\n    }\n\n    obterNegociacoesDaSemanaAnterior() {\n        return this._http\n            .get('negociacoes/anterior')\n            .then((negociacoes) => {\n                return negociacoes.map((objeto) => Negociacao.create(new Date(objeto.data), objeto.quantidade, objeto.valor));\n            }).catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da semana anterior.')\n            });\n    }\n\n    obterNegociacoes() {\n        return Promise.all([\n            this.obterNegociacoesDaSemana(),\n            this.obterNegociacoesDaSemanaAnterior(),\n            this.obterNegociacoesDaSemanaRetrasada()\n        ]).then(periodos => periodos.reduce((dados, periodo) => dados.concat(periodo), []))\n            .catch(erro => {\n                console.log(erro);\n                throw new Error(erro);\n            });\n    }\n\n    cadastra(negociacao) {\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => 'Negociação adicionada com sucesso!')\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível adicionar a negociação.');\n            });\n    }\n\n    lista() {\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.listaTodos())\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações.');\n            });\n    }\n\n    apaga() {\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.apagarTodos())\n            .then(() => 'Negociações apagadas com sucesso!')\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível apagar as negociações.');\n            });\n    }\n\n    importa(listaAtual) {\n        return this.obterNegociacoes()\n            .then(negociacoes =>\n                negociacoes.filter(negociacao =>\n                    !listaAtual.some(negociacaoExistente => negociacao.isEquals(negociacaoExistente)))\n            )\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível importar as negociações.');\n            });\n    }\n}"]}