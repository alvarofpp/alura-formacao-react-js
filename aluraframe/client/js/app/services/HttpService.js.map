{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;kDACKC,G,EAAK;AACf,4BAAIA,IAAIC,EAAR,EAAY;AACR,mCAAOD,GAAP;AACH;;AAED,8BAAM,IAAIE,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACH;;;wCAEGC,G,EAAK;AAAA;;AACL,+BAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,mCAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBADH,EAEFM,IAFE,CAEG;AAAA,mCAAON,IAAIQ,IAAJ,EAAP;AAAA,yBAFH,CAAP;AAGH;;;yCAEIJ,G,EAAKK,I,EAAM;AAAA;;AACZ,+BAAOJ,MAAMD,GAAN,EAAW;AACdM,qCAAS;AACL,gDAAgB;AADX,6BADK;AAIdC,oCAAQ,MAJM;AAKdC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AALQ,yBAAX,EAMJH,IANI,CAMC;AAAA,mCAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBAND,CAAP;AAOH","file":"HttpService.js","sourcesContent":["export class HttpService {\n    _handleErrors(res) {\n        if (res.ok) {\n            return res;\n        }\n\n        throw new Error(res.statusText);\n    }\n\n    get(url) {\n        return fetch(url)\n            .then(res => this._handleErrors(res))\n            .then(res => res.json());\n    }\n\n    post(url, dado) {\n        return fetch(url, {\n            headers: {\n                'Content-type': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify(dado)\n        }).then(res => this._handleErrors(res));\n    }\n}"]}